{
  "name": "boilerplate",
  "version": "1.0.0",
  "description": "",
  "scripts": {
    "init:backend": "cd backend && npm install",
    "link-shared:backend": "cd backend && npm link shared",
    "init:frontend": "cd frontend && npm install",
    "link-shared:frontend": "cd frontend && npm link shared",
    "init:shared": "cd shared && npm install",
    "build:shared": "cd shared && npm run build",
    "build:shared-windows": "cd shared && npm run build-windows",
    "link-shared:global": "cd shared/dist && npm link",
    "link-shared": "npm run link-shared:global && npm run link-shared:backend && npm run link-shared:frontend",
    "init": "npm install && npm-run-all -p init:* && npm run build:shared && npm run link-shared",
    "seed:dev": "docker compose --env-file=.env.dev exec backend npx sequelize-cli db:seed:all --config src/config/config.mjs --seeders-path ./seeders --debug",
    "seed:prod": "docker compose --env-file=.env.prod exec backend sequelize-cli db:seed:all --config dist/config/config.mjs --seeders-path dist/seeders",
    "init-windows": "npm install && npm-run-all -p init:* && npm run build:shared-windows && npm run link-shared",
    "start": "docker compose --env-file=.env.dev up -d",
    "stop": "docker compose --env-file=.env.dev --env-file=.env.test down",
    "start:build": "docker compose --env-file=.env.dev up --build -d",
    "clean:build": "docker compose --env-file=.env.dev build --no-cache",
    "test:backend": "docker compose --env-file=./.env.test up -d && docker compose --env-file=.env.test exec backend npm run test",
    "test:backend:watch": "docker compose --env-file=./.env.test up -d && docker compose --env-file=.env.test exec backend npm run test:watch",
    "test:e2e": "docker compose --env-file=.env.test exec backend npm run test:e2e",
    "test:backend:all": "npm run test:backend && npm run test:e2e",
    "start:prod": "docker compose  -f production.local.yml --env-file=.env.prod up -d",
    "build:prod": "docker compose -f production.local.yml --env-file=.env.prod build",
    "start:build:prod": "docker compose -f production.local.yml --env-file=.env.prod up --build -d",
    "stop:prod": "docker compose -f production.local.yml --env-file=.env.prod down",
    "lint:backend": "cd backend && npm run lint",
    "lint:frontend": "cd frontend && npm run lint",
    "db:migrate:dev": "docker compose --env-file=.env.dev exec backend npx sequelize-cli db:migrate --config src/config/config.mjs --migrations-path ./migrations",
    "db:migrate:undo:dev": "docker compose --env-file=.env.dev exec backend npx sequelize-cli db:migrate:undo:all --config src/config/config.mjs --migrations-path ./migrations",
    "db:migrate:prod": "docker compose --env-file=.env.prod exec backend npx sequelize-cli db:migrate --config dist/config/config.mjs --migrations-path ./dist/migrations",
    "db:migrate:undo:prod": "docker compose --env-file=.env.prod exec backend npx sequelize-cli db:migrate:undo:all --config dist/config/config.mjs --migrations-path ./dist/migrations"
  },
  "author": "",
  "devDependencies": {
    "@storybook/addon-controls": "^7.3.1",
    "@typescript-eslint/eslint-plugin": "^5.28.0",
    "@typescript-eslint/parser": "^5.28.0",
    "eslint": "^8.18.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-prettier": "^4.0.0",
    "husky": "8.0.1",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.7.1",
    "typescript": "^4.7.4"
  },
  "dependencies": {
    "@nestjs-modules/mailer": "^1.9.1",
    "@nestjs/common": "^10.2.5",
    "amqplib": "^0.10.3",
    "axios": "^1.5.0",
    "immer": "^10.0.2",
    "react-svg": "^16.1.21"
  }
}
